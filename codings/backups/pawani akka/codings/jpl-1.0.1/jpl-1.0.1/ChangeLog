$Id: ChangeLog,v 1.11 1999/05/05 20:29:30 fadushin Exp $

Contains a log of changes between releases.  Entries in reverse
chronological order.

-------------------------------------------------------------------------
Status:  final
Major:   1
Minor:   0
Patch:   1

cvs tag: final_1_0_1

Description:
	
	o Fixed a bug with the representation of Tuples.  They are now
	*always* binary terms, though generally structured as binary trees.
	The interface is the same, except we now require that Tuples
	contain *at least* two elements.  (The single element constructor
	has been removed, but I consider this a patch, not an interface change)

	o Added an ith() accessor to the Compound and Query classes.  
	This is used to obtain the ith element in the array of Terms in
	the Compound or Query.

	o Added a debugString() method to the Term and Query classes.
	This is used to obtain more detailed information about the 
	structure of the Term or Query.

	o Updated and fixed some of the documentation.
	
	o JPL is now released under the terms of the Gnu Library Public
	License, not the Gnu General Public License.  All relevant files
	have been updated.
	

-------------------------------------------------------------------------
Status:  final
Major:   1
Minor:   0
Patch:   0

cvs tag: final_1_0_0

Description:
	This is more or less a cleanup of beta2, tying up a few
	loose ends (documentation, final modifiers, etc.).
	
	o Added a section in the documentation describing exceptions
	
	o Added the conveninece constructors and factory methods to the
	documentation.
	
	o Changed the exteption_term() accessor in the PrologException class
	to be just term().
	

-------------------------------------------------------------------------
Status:  beta2
Major:   1
Minor:   0
Patch:   0

cvs tag: beta2_1_0_0

Description:
	This update makes JPL thread-safe, more or less.  Consult the
	documentation for where it is not, and how to get around that.
	
	Here is a summary of the changes:
	
	o Thread-Safety: All critical code is now wrapped in a 
	synchronized block, using the jpl.fli.Prolog Class object
	as a monitor.  This way, the query(), oneSolution(), and
	allSolutions() methods are thread-safe.  The rest of the
	"critical" Query methods can be made thread safe if they
	are wrapped in a synchronized block using this montitor
	
	o Added a static lock() method to Query to obtain the monitor.
	
	o Added 10 new constructors to the Query, Tuple and Compound classes,
	so that the Util.toTermArray methods don't need to be invoked
	all the time.
	

-------------------------------------------------------------------------
Status:  beta1
Major:   1
Minor:   0
Patch:   0

cvs tag: beta1_1_0_0

Description:

	This is the first beta release, towards version 1.0.0.  There
	are a significant number of changes to the sources, which will probably
	cause programs using older versions of JPL to break.  The interfaces,
	however, are settling down and will be frozen with release 1.0.0.
	
	Here is a summary of the changes:
	
	o Added a version() and version_string() static methods to JPL.  
	Running
	
		prompt% java JPL [-v | --version]
	
	now prints the version to stdout.
	
	o Added equals definitions for all the Term types.  You
	should now be able to test for "equality" of a Term.
	Terms are equal if they are isomorphic.  Variables are
	equal, though, only if they have the same term_t value.  I'm
	still deliberating about whether this is the right semantics.
	
	o Added a Util class for generating arrays of Terms using
	the toTermArray methods (up to 10 arguments), and for
	converting Term arrays to jpl.Lists.
	
	o Added constructors for ground queries.
	
	o Added the query() method for making ground queries.
	
	o Cleaned up the fli.Prolog class and finished off the
	implementations.  There were some methods in there that
	should not have been.
	
	o Implemented Integer, Long, Float, and String classes.
	
	o Added elements() method to the List class, which returns 
	a java.Util.Enumeration of all the elements in the List.
	This *only* works (and is so designed) for Lists whose last
	cdr is nil.  A JPLException is thrown, otherwise.
	
	o Added accessors for the fields in all the Term types.
	
	o Changed Test.java in test directory to run some simple
	regression and timing tests.  Added a getting-started demo.
	
	o General code cleanup.  fli.term_t references had been
	being cached in Terms, when in fact they only needed to be
	cached in Variables.
	
	o Improved html documentation.  Added Getting Started Chapter, and
	fixed errors and ommissions in the rest of the documents.
	
	o Improved in-line comments, generated in the API documentation.

-------------------------------------------------------------------------
Release: alpha
Major:   0
Minor:   0
Patch:   7

cvs tag: alpha_0_0_7

Description:
    o Fixed a bug in the Query class which caused a NullPointerException
	if an Atom was passed into the constructor.

-------------------------------------------------------------------------
Release: alpha
Major:   0
Minor:   0
Patch:   6

cvs tag: alpha_0_0_6

Description:
    <skipped documenting these changes>

-------------------------------------------------------------------------
Release: alpha
Major:   0
Minor:   0
Patch:   5

cvs tag: alpha_0_0_5

Description:
    Added some html documentation.  Still need to add a lot to the
	code...  This stuff should serve as a good start for the web
	page, at any rate...

-------------------------------------------------------------------------
Release: alpha
Major:   0
Minor:   0
Patch:   4

cvs tag: alpha_0_0_4

Description:
    Implemented most of the native methods in jpl.fli.Prolog class.
    Still need to make decsions about how extensive this class should
    be (and need to find time to do it...)

-------------------------------------------------------------------------
Release: alpha
Major:   0
Minor:   0
Patch:   3

cvs tag: alpha_0_0_3

Description:
    Removed dependency on a shared lib version of libpl.a; now
    ld just imports all the functions from that static lib into
    libjpl.so.  Miscellaneous documentation fixes.

-------------------------------------------------------------------------
Release: alpha
Major:   0
Minor:   0
Patch:   2

cvs tag: alpha_0_0_2

Description:
    Bug fix.  Fixed parsing of term_t objects into Terms, particularly
    in cases where unification results in variable bindings to
    multiple instances of the same variable.  E.g., 
    
        ?- assert( p( f( X, X ), X ) ), p( Y, Z ).


-------------------------------------------------------------------------
Release: alpha
Major:   0
Minor:   0
Patch:   1

cvs tag: alpha_0_0_1

Description:
    Initial release.  Contains basic functionality for testing
    with simple examples.  Released to Prolog community for testing.








template:

-------------------------------------------------------------------------
Release: 
Major:   
Minor:   
Patch:   

cvs tag: 

Description:
    
